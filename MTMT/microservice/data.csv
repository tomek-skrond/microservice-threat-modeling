Interaction Name,Threat Number,Summary,Priority,Category,Description,SDL Phase,Mitigations
Catalog to Gateway,1,An adversary can deny actions on Cloud Gateway due to lack of auditing  [State: Not Started],High,Repudiation,"An adversary may perform actions such as spoofing attempts, unauthorized access etc. on Cloud gateway. It is important to monitor these attempts so that adversary cannot deny these actions",Design,"Ensure that appropriate auditing and logging is enforced on Cloud Gateway. Refer: <a href=""https://aka.ms/tmtauditlog#logging-cloud-gateway"">https://aka.ms/tmtauditlog#logging-cloud-gateway</a>"
DB to Catalog,2,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
DB to Catalog,3,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
DB to Catalog,4,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
DB to Catalog,5,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
DB to Catalog,6,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
DB to Catalog,7,An adversary may spoof Generic Data Store and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
DB to Catalog,8,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
DB to Catalog,9,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
DB to Delivery,10,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
DB to Delivery,11,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
DB to Delivery,12,An adversary may spoof Generic Data Store and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
DB to Delivery,13,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
DB to Delivery,14,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
DB to Delivery,15,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
DB to Delivery,16,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
DB to Delivery,17,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
DB to Login,18,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
DB to Login,19,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
DB to Login,20,An adversary may spoof Generic Data Store and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
DB to Login,21,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
DB to Login,22,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
DB to Login,23,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
DB to Login,24,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
DB to Login,25,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
DB to Order,26,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
DB to Order,27,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
DB to Order,28,An adversary may spoof Generic Data Store and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
DB to Order,29,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
DB to Order,30,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
DB to Order,31,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
DB to Order,32,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
DB to Order,33,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
DB to Payment,34,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
DB to Payment,35,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
DB to Payment,36,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
DB to Payment,37,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
DB to Payment,38,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
DB to Payment,39,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
DB to Payment,40,An adversary may spoof Generic Data Store and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
DB to Payment,41,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Delivery to Gateway,42,An adversary can deny actions on Cloud Gateway due to lack of auditing  [State: Not Started],High,Repudiation,"An adversary may perform actions such as spoofing attempts, unauthorized access etc. on Cloud gateway. It is important to monitor these attempts so that adversary cannot deny these actions",Design,"Ensure that appropriate auditing and logging is enforced on Cloud Gateway. Refer: <a href=""https://aka.ms/tmtauditlog#logging-cloud-gateway"">https://aka.ms/tmtauditlog#logging-cloud-gateway</a>"
Desktop Frontend to API Gateway,43,An adversary can deny actions on Cloud Gateway due to lack of auditing  [State: Not Started],High,Repudiation,"An adversary may perform actions such as spoofing attempts, unauthorized access etc. on Cloud gateway. It is important to monitor these attempts so that adversary cannot deny these actions",Design,"Ensure that appropriate auditing and logging is enforced on Cloud Gateway. Refer: <a href=""https://aka.ms/tmtauditlog#logging-cloud-gateway"">https://aka.ms/tmtauditlog#logging-cloud-gateway</a>"
Gateway to Catalog,44,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Gateway to Catalog,45,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
Gateway to Catalog,46,An adversary may spoof API Gateway and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
Gateway to Catalog,47,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
Gateway to Catalog,48,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
Gateway to Catalog,49,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
Gateway to Catalog,50,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
Gateway to Catalog,51,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
Gateway to Delivery,52,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Gateway to Delivery,53,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
Gateway to Delivery,54,An adversary may spoof API Gateway and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
Gateway to Delivery,55,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
Gateway to Delivery,56,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
Gateway to Delivery,57,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
Gateway to Delivery,58,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
Gateway to Delivery,59,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
Gateway to Login,60,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Gateway to Login,61,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
Gateway to Login,62,An adversary may spoof API Gateway and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
Gateway to Login,63,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
Gateway to Login,64,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
Gateway to Login,65,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
Gateway to Login,66,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
Gateway to Login,67,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
Gateway to Order,68,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Gateway to Order,69,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
Gateway to Order,70,An adversary may spoof API Gateway and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
Gateway to Order,71,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
Gateway to Order,72,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
Gateway to Order,73,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
Gateway to Order,74,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
Gateway to Order,75,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
Login to Gateway,76,An adversary can deny actions on Cloud Gateway due to lack of auditing  [State: Not Started],High,Repudiation,"An adversary may perform actions such as spoofing attempts, unauthorized access etc. on Cloud gateway. It is important to monitor these attempts so that adversary cannot deny these actions",Design,"Ensure that appropriate auditing and logging is enforced on Cloud Gateway. Refer: <a href=""https://aka.ms/tmtauditlog#logging-cloud-gateway"">https://aka.ms/tmtauditlog#logging-cloud-gateway</a>"
Mobile Frontend to API Gateway,77,An adversary can deny actions on Cloud Gateway due to lack of auditing  [State: Not Started],High,Repudiation,"An adversary may perform actions such as spoofing attempts, unauthorized access etc. on Cloud gateway. It is important to monitor these attempts so that adversary cannot deny these actions",Design,"Ensure that appropriate auditing and logging is enforced on Cloud Gateway. Refer: <a href=""https://aka.ms/tmtauditlog#logging-cloud-gateway"">https://aka.ms/tmtauditlog#logging-cloud-gateway</a>"
MQ to Delivery,78,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
MQ to Delivery,79,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
MQ to Delivery,80,An adversary may spoof Message Queue and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
MQ to Delivery,81,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
MQ to Delivery,82,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
MQ to Delivery,83,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
MQ to Delivery,84,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
MQ to Delivery,85,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
MQ to E-mail,86,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
MQ to E-mail,87,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
MQ to E-mail,88,An adversary may spoof Message Queue and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
MQ to E-mail,89,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
MQ to E-mail,90,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
MQ to E-mail,91,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
MQ to E-mail,92,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
MQ to E-mail,93,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
MQ to SMS,94,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
MQ to SMS,95,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
MQ to SMS,96,An adversary may spoof Message Queue and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
MQ to SMS,97,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
MQ to SMS,98,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
MQ to SMS,99,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
MQ to SMS,100,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
MQ to SMS,101,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
Order to Gateway,102,An adversary can deny actions on Cloud Gateway due to lack of auditing  [State: Not Started],High,Repudiation,"An adversary may perform actions such as spoofing attempts, unauthorized access etc. on Cloud gateway. It is important to monitor these attempts so that adversary cannot deny these actions",Design,"Ensure that appropriate auditing and logging is enforced on Cloud Gateway. Refer: <a href=""https://aka.ms/tmtauditlog#logging-cloud-gateway"">https://aka.ms/tmtauditlog#logging-cloud-gateway</a>"
Order to Payment,103,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Order to Payment,104,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
Order to Payment,105,An adversary may spoof Order Service and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
Order to Payment,106,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
Order to Payment,107,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
Order to Payment,108,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
Order to Payment,109,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
Order to Payment,110,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
Payment to Order,111,An adversary can gain access to sensitive data by performing SQL injection through Web API  [State: Not Started],High,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Payment to Order,112,An adversary may inject malicious inputs into an API and affect downstream processes  [State: Not Started],High,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
Payment to Order,113,An adversary may spoof Payment Service and gain access to Web API  [State: Not Started],High,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
Payment to Order,114,Attacker can deny a malicious act on an API leading to repudiation issues  [State: Not Started],High,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
Payment to Order,115,An adversary can gain access to sensitive data stored in Web API's config files  [State: Not Started],Medium,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
Payment to Order,116,An adversary can gain access to sensitive data by sniffing traffic to Web API  [State: Not Started],High,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
Payment to Order,117,An adversary can gain access to sensitive information from an API through error messages  [State: Not Started],High,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
Payment to Order,118,An adversary may gain unauthorized access to Web API due to poor access control checks  [State: Not Started],High,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
