Interaction Name,Threat Number,Summary,Priority,State,Category,Description,SDL Phase,Mitigations
Backend to LB,1,An adversary may spoof the service or service endpoints by leveraging stale CNAME DNS records and executing a subdomain hijack attack,High,Not Started,Spoofing,An adversary may spoof the service or service endpoints by leveraging stale CNAME DNS records and executing a subdomain hijack attack,Implementation,"Address stale CNAME DNS records mapping custom domain names to the domain name of the Azure Traffic Manager instance. In some cases, deleting the stale CNAME records may be sufficient, while in other cases, the domain name of the Azure Traffic Manager instance should be kept to prevent subdomain hijack attacks. Refer: <a href=""https://aka.ms/tmt-th178 "">https://aka.ms/tmt-th178 </a>"
DB to Backend,2,An adversary may gain unauthorized access to Web API due to poor access control checks,High,Not Started,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
DB to Backend,3,An adversary can gain access to sensitive information from an API through error messages,High,Not Started,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
DB to Backend,4,An adversary can gain access to sensitive data by sniffing traffic to Web API,High,Not Started,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
DB to Backend,5,An adversary can gain access to sensitive data stored in Web API's config files,Medium,Not Started,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
DB to Backend,6,Attacker can deny a malicious act on an API leading to repudiation issues,High,Not Started,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
DB to Backend,7,An adversary may spoof Database and gain access to Web API,High,Not Started,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
DB to Backend,8,An adversary may inject malicious inputs into an API and affect downstream processes,High,Not Started,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
DB to Backend,9,An adversary can gain access to sensitive data by performing SQL injection through Web API,High,Not Started,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
LB to Backend,10,An adversary may gain unauthorized access to Web API due to poor access control checks,High,Not Started,Elevation of Privileges,An adversary may gain unauthorized access to Web API due to poor access control checks,Implementation,"Implement proper authorization mechanism in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtauthz#authz-aspnet"">https://aka.ms/tmtauthz#authz-aspnet</a>"
LB to Backend,11,An adversary can gain access to sensitive information from an API through error messages,High,Not Started,Information Disclosure,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names - Connection strings - Usernames - Passwords - SQL procedures - Details of dynamic SQL failures - Stack trace and lines of code - Variables stored in memory - Drive and folder locations - Application install points - Host configuration settings - Other internal application details",Implementation,"Ensure that proper exception handling is done in ASP.NET Web API. Refer: <a href=""https://aka.ms/tmtxmgmt#exception"">https://aka.ms/tmtxmgmt#exception</a>"
LB to Backend,12,An adversary can gain access to sensitive data by sniffing traffic to Web API,High,Not Started,Information Disclosure,An adversary can gain access to sensitive data by sniffing traffic to Web API,Implementation,"Force all traffic to Web APIs over HTTPS connection. Refer: <a href=""https://aka.ms/tmtcommsec#webapi-https"">https://aka.ms/tmtcommsec#webapi-https</a>"
LB to Backend,13,An adversary can gain access to sensitive data stored in Web API's config files,Medium,Not Started,Information Disclosure,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",Implementation,"Encrypt sections of Web API's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtconfigmgmt#config-sensitive"">https://aka.ms/tmtconfigmgmt#config-sensitive</a>"
LB to Backend,14,Attacker can deny a malicious act on an API leading to repudiation issues,High,Not Started,Repudiation,Attacker can deny a malicious act on an API leading to repudiation issues,Design,"Ensure that auditing and logging is enforced on Web API. Refer: <a href=""https://aka.ms/tmtauditlog#logging-web-api"">https://aka.ms/tmtauditlog#logging-web-api</a>"
LB to Backend,15,An adversary may spoof Load Balancer and gain access to Web API,High,Not Started,Spoofing,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",Design,"Ensure that standard authentication techniques are used to secure Web APIs. Refer: <a href=""https://aka.ms/tmtauthn#authn-secure-api"">https://aka.ms/tmtauthn#authn-secure-api</a>"
LB to Backend,16,An adversary may inject malicious inputs into an API and affect downstream processes,High,Not Started,Tampering,An adversary may inject malicious inputs into an API and affect downstream processes,Implementation,"Ensure that model validation is done on Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#validation-api"">https://aka.ms/tmtinputval#validation-api</a> Implement input validation on all string type parameters accepted by Web API methods. Refer: <a href=""https://aka.ms/tmtinputval#string-api"">https://aka.ms/tmtinputval#string-api</a>"
LB to Backend,17,An adversary can gain access to sensitive data by performing SQL injection through Web API,High,Not Started,Tampering,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed.",Implementation,"Ensure that type-safe parameters are used in Web API for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe-api"">https://aka.ms/tmtinputval#typesafe-api</a>"
Request,18,An adversary may spoof the service or service endpoints by leveraging stale CNAME DNS records and executing a subdomain hijack attack,High,Not Started,Spoofing,An adversary may spoof the service or service endpoints by leveraging stale CNAME DNS records and executing a subdomain hijack attack,Implementation,"Address stale CNAME DNS records mapping custom domain names to the domain name of the Azure Traffic Manager instance. In some cases, deleting the stale CNAME records may be sufficient, while in other cases, the domain name of the Azure Traffic Manager instance should be kept to prevent subdomain hijack attacks. Refer: <a href=""https://aka.ms/tmt-th178 "">https://aka.ms/tmt-th178 </a>"
Request,19,An adversary may spoof the service or service endpoints by leveraging stale CNAME DNS records and executing a subdomain hijack attack,High,Not Started,Spoofing,An adversary may spoof the service or service endpoints by leveraging stale CNAME DNS records and executing a subdomain hijack attack,Implementation,"Address stale CNAME DNS records mapping custom domain names to the domain name of the Azure Traffic Manager instance. In some cases, deleting the stale CNAME records may be sufficient, while in other cases, the domain name of the Azure Traffic Manager instance should be kept to prevent subdomain hijack attacks. Refer: <a href=""https://aka.ms/tmt-th178 "">https://aka.ms/tmt-th178 </a>"
